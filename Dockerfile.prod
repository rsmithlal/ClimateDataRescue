FROM ruby:2.6.5 as Builder

RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

RUN apt-get update -qq \
  && apt-get install -y build-essential libssl-dev libpq-dev yarn

RUN mkdir /app
WORKDIR /app

COPY Gemfile* /app/

RUN gem install bundler:2.0.2

RUN bundle config --global frozen 1 \
 && bundle install --without development test -j4 --retry 3 \
 # Remove unneeded files (cached *.gem, *.o, *.c)
 && rm -rf /usr/local/bundle/cache/*.gem \
 && find /usr/local/bundle/gems/ -name "*.c" -delete \
 && find /usr/local/bundle/gems/ -name "*.o" -delete

COPY . /app

ENV RACK_ENV=production
ENV RAILS_ENV=production

RUN SECRET_KEY_BASE=`bin/rake secret` bundle exec rails assets:precompile

# Remove folders not needed in resulting image
RUN rm -rf spec node_modules app/assets vendor/assets lib/assets tmp/cache

###############################
# Stage Final
FROM ruby:2.6.5
LABEL maintainer="rob@bettertogethersolutions.com"

RUN apt-get update -qq \
  && apt-get install -y netcat libjpeg62 imagemagick default-mysql-client

# Add user
RUN groupadd -g 1000 -r app \
 && useradd -ms /bin/bash app -g app
USER app

# Copy app with gems from former build stage
COPY --from=Builder /usr/local/bundle/ /usr/local/bundle/
COPY --from=Builder --chown=app:app /app /app

# Set Rails env
ENV RAILS_LOG_TO_STDOUT true
ENV RAILS_SERVE_STATIC_FILES true
ENV RACK_ENV=production
ENV RAILS_ENV=production

WORKDIR /app

# Expose Puma port
EXPOSE 3000

# Start up
CMD ["docker/startup.sh"]
